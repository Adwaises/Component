<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mainComponent1.BackgroundImagePrimary" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>