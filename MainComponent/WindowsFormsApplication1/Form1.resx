<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mainComponent1.BackgroundImagePrimary" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f6sURO79gUkCAAAAAElFTkSuQmCC
</value>
  </data>
</root>