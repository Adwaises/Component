<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mainComponent1.BackgroundImagePrimary" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nnb2+eUu7gAAAABJRU5ErkJggg==
</value>
  </data>
</root>